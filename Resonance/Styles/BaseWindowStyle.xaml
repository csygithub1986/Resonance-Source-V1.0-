<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--主窗体最大最小化按钮样式 10.18-->
    <Style x:Key="BaseWindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="MainBorder" Background="Transparent" IsHitTestVisible="True">
                        <Border x:Name="Membrane" Background="Transparent">
                            <Grid>
                                <!--<Ellipse Name="GelBackground" StrokeThickness="5" Fill="{StaticResource ResourceKey=ButtonFillBursh}" OpacityMask="{StaticResource ResourceKey=OpacityBursh}" />-->
                                <ContentPresenter Content="{TemplateBinding  Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Resources>
                        <!--<Storyboard x:Key="OnMouseEnter">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Membrane">
                                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#51FFFFFF"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeave">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Membrane">
                                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="Transparent"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>-->
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource ResourceKey=ThemeBrushDisableBack}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Membrane" Property="Background" Value="#51000000"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Membrane" Property="Background" Value="#51FFFFFF"/>
                        </MultiTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseEnter">
                            <!--<BeginStoryboard Storyboard="{StaticResource OnMouseEnter}"/>-->
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseLeave">
                            <!--<BeginStoryboard Storyboard="{StaticResource OnMouseLeave}"/>-->
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--主窗体关闭按钮样式 10.18-->
    <Style x:Key="BaseWindowCloseButtonStyle" TargetType="{x:Type Button}" >
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="MainBorder" Background="Transparent" IsHitTestVisible="True">
                        <Border x:Name="Membrane" Background="Transparent">
                            <Grid>
                                <!--<Ellipse Name="GelBackground" StrokeThickness="5" Fill="{StaticResource ResourceKey=ButtonFillBursh}" OpacityMask="{StaticResource ResourceKey=OpacityBursh}" />-->
                                <ContentPresenter Content="{TemplateBinding  Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Resources>
                        <!--<Storyboard x:Key="OnMouseEnter">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Membrane">
                                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="Red"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeave">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Membrane">
                                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="Transparent"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>-->
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource ResourceKey=ThemeBrushDisableBack}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Membrane" Property="Background" Value="Brown"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Membrane" Property="Background" Value="Red"/>
                        </MultiTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseEnter">
                            <!--<BeginStoryboard Storyboard="{StaticResource OnMouseEnter}"/>-->
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseLeave">
                            <!--<BeginStoryboard Storyboard="{StaticResource OnMouseLeave}"/>-->
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--按钮Context-->
    <Viewbox x:Key="MaxButtonTemplate" >
        <Canvas Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="38" Height="38" Canvas.Left="19" Canvas.Top="19" Stretch="Uniform" Fill="{DynamicResource ResourceKey=WindowBorderFillColor}" Data="M4,4H20V20H4V4M6,8V18H18V8H6Z"/>
        </Canvas>
    </Viewbox>
    <Viewbox x:Key="RestoreButtonTemplate" >
        <Canvas Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="38" Height="38" Canvas.Left="19" Canvas.Top="19" Stretch="Uniform" Fill="{DynamicResource ResourceKey=WindowBorderFillColor}" Data="M4,8H8V4H20V16H16V20H4V8M16,8V14H18V6H10V8H16M6,12V18H14V12H6Z"/>
        </Canvas>
    </Viewbox>

    <!--BaseWindowControlTemplate-->
    <ControlTemplate x:Key="BaseWindowControlTemplate" TargetType="{x:Type Window}">
        <Border BorderBrush="{DynamicResource WindowsBorderColor}"  BorderThickness="1 0 1 1">
        <DockPanel LastChildFill="True" Background="{StaticResource ResourceKey=RibbonWindowBgBrush}" >
            <!--窗体标题框-->
            <Border Width="Auto" Height="Auto" DockPanel.Dock="Top" Background="{DynamicResource ResourceKey=TitleColor}" CornerRadius="0" x:Name="borderTitle">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="150" />
                    </Grid.ColumnDefinitions>
                    <Image  Height="28" x:Name="imgLogo"  Grid.Column="0"   HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2"/>
                    <TextBlock x:Name="txtTitle" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{DynamicResource ResourceKey=WindowBorderForeground}" Margin="2"/>
                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Grid.Column="2">
                            <Button x:Name="btnSetting" Style="{StaticResource BaseWindowButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0" Width="30" Height="28" BorderBrush="{x:Null}" Background="{x:Null}" Visibility="{Binding MinButtonVisibility,Mode=OneWay}">
                                <Viewbox>
                                    <Canvas  Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                        <Path Width="38.9239" Height="38.9239" Canvas.Left="18.538" Canvas.Top="18.5381" Stretch="Fill" Fill="{DynamicResource ResourceKey=WindowBorderFillColor}" Data="F1 M 38,23.5C 38.8643,23.5 39.7109,23.5756 40.5337,23.7206L 42.6275,18.5381L 48.1901,20.787L 46.0964,25.9692C 47.6473,27.0149 48.9851,28.3527 50.0308,29.9036L 55.213,27.8099L 57.4619,33.3725L 52.2794,35.4664C 52.4244,36.2891 52.5,37.1357 52.5,38C 52.5,38.8643 52.4244,39.7109 52.2794,40.5337L 57.4619,42.6275L 55.213,48.1901L 50.0308,46.0964C 49.0795,47.5073 47.8865,48.7418 46.5112,49.7405L 48.7844,54.8462L 43.3041,57.2891L 41.0307,52.1828C 40.0533,52.3906 39.0394,52.5 38,52.5C 37.1357,52.5 36.2891,52.4244 35.4664,52.2794L 33.3725,57.462L 27.8099,55.213L 29.9036,50.0309C 28.3527,48.9851 27.0149,47.6473 25.9691,46.0964L 20.787,48.1901L 18.538,42.6275L 23.7206,40.5336C 23.5756,39.7109 23.5,38.8643 23.5,38C 23.5,37.1357 23.5756,36.2891 23.7206,35.4664L 18.538,33.3725L 20.787,27.8099L 25.9691,29.9036C 26.9205,28.4927 28.1135,27.2582 29.4889,26.2594L 27.2157,21.1537L 32.6959,18.7109L 34.9694,23.8172C 35.9468,23.6094 36.9606,23.5 38,23.5 Z M 38,28C 32.4771,28 28,32.4772 28,38C 28,43.5229 32.4771,48 38,48C 43.5228,48 48,43.5229 48,38C 48,32.4772 43.5228,28 38,28 Z "/>
                                    </Canvas>
                                </Viewbox>
                            </Button>
                            <Button x:Name="btnMin" Style="{StaticResource BaseWindowButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0" Width="30" Height="28" BorderBrush="{x:Null}" Background="{x:Null}" Visibility="{Binding MinButtonVisibility,Mode=OneWay}">
                            <Viewbox>
                                <Canvas Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                    <Path Width="37" Height="38" Canvas.Left="20" Canvas.Top="19" Stretch="Uniform" Fill="{DynamicResource ResourceKey=WindowBorderFillColor}" Data="M20,14H4V10H20"/>
                                </Canvas>
                            </Viewbox>
                        </Button>
                        <Button x:Name="btnMax" Style="{StaticResource BaseWindowButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0" Width="30" Height="28" BorderBrush="{x:Null}" Background="{x:Null}" Visibility="{Binding MaxButtonVisibility,Mode=OneWay}">
                            <Viewbox>
                                <Canvas Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                    <Path Width="38" Height="38" Canvas.Left="19" Canvas.Top="19" Stretch="Uniform" Fill="{DynamicResource ResourceKey=WindowBorderFillColor}" Data="M4,4H20V20H4V4M6,8V18H18V8H6Z"/>
                                </Canvas>
                            </Viewbox>
                        </Button>
                        <Button x:Name="btnClose" Style="{StaticResource BaseWindowCloseButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0" Width="30" Height="28" BorderBrush="{x:Null}" Background="Transparent" Visibility="{Binding CloseButtonVisibility,Mode=OneWay}">
                            <Viewbox>
                                <Canvas  Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                                    <Path Width="31.6666" Height="31.6667" Canvas.Left="22.1666" Canvas.Top="22.1667" Stretch="Uniform" Fill="{DynamicResource ResourceKey=WindowBorderFillColor}" Data="M13.46,12L19,17.54V19H17.54L12,13.46L6.46,19H5V17.54L10.54,12L5,6.46V5H6.46L12,10.54L17.54,5H19V6.46L13.46,12Z"/>
                                </Canvas>
                            </Viewbox>
                        </Button>
                    </StackPanel>
                </Grid>

            </Border>
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Width="Auto"
                    Height="Auto"
                    DockPanel.Dock="Bottom"
                    CornerRadius="0"                   
                    >
                <AdornerDecorator>
                    <ContentPresenter />
                </AdornerDecorator>
            </Border>
        </DockPanel>
            
        </Border>
    </ControlTemplate>

    <!--BaseWindow样式-->
    <Style x:Key="BaseWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Template" Value="{StaticResource BaseWindowControlTemplate}"/>

        <Setter Property="AllowsTransparency"    Value="False" />
        <Setter Property="WindowStyle"  Value="None" />
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=WindowsBorderColor}" />
        <Setter Property="BorderThickness"   Value="0" />

        <Style.Triggers>
            <Trigger Property="WindowState" Value="Normal">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    
    <Style x:Key="TabButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="MainBorder" Background="{DynamicResource ResourceKey=RibbonActiveTitleBrush}" IsHitTestVisible="True">
                        <Border x:Name="Membrane" Background="Transparent">
                            <Grid>
                                <Ellipse Name="GelBackground" StrokeThickness="5" Fill="{StaticResource ResourceKey=ButtonFillBursh}"  />
                                <ContentPresenter x:Name="btnC" Content="{TemplateBinding  Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource ResourceKey=ThemeBrushDisableBack}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Membrane" Property="Background" Value="{DynamicResource ResourceKey=MouseOverColor}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>